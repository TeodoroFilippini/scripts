<templateSet group="Python">
  <template name="aa" toReformat="false" toShortenFQNames="true" value="$1$ = $1$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="arg" toReformat="false" toShortenFQNames="true" value="parser.add_argument('--$arg$', help='$help$')">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="arg" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="help" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="argparse" toReformat="false" toShortenFQNames="true" value="parser = argparse.ArgumentParser()&#10;args = parser.parse_args()&#10;">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="arr" toReformat="false" toShortenFQNames="true" value="-&gt;">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ass" toReformat="false" toShortenFQNames="true" value="= ">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="bonk" toReformat="false" toShortenFQNames="true" value="raise RuntimeError('bonk')">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call" toReformat="false" toShortenFQNames="true" value="subprocess.check_call([$END$])">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="deltasec" toReformat="false" toShortenFQNames="true" value="datetime.timedelta(seconds=$sec$)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="sec" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template description="datetime.datetime" name="dtdt" toReformat="false" toShortenFQNames="true" value="datetime.datetime">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dump" toReformat="false" toShortenFQNames="true" value="print(&quot;$var$ is {}&quot;.format(repr($var$)))  # TODO: remove var dump">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="err" toReformat="false" toShortenFQNames="true" value="pqry.logging.err(__file__, inspect.currentframe().f_lineno, &quot;$END$&quot;)">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fmtone" toReformat="false" toShortenFQNames="true" value="&quot;$txt1${}$txt2$&quot;.format(&#10;$var1$)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="txt1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="txt2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fmtthree" toReformat="false" toShortenFQNames="true" value="&quot;$pre${}$txt2${}$txt3${}$txt4$&quot;.format(&#10;$var1$, $var2$, $var3$)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="pre" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="txt2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="txt3" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="txt4" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fmttwo" toReformat="false" toShortenFQNames="true" value="&quot;$t1${}$t2${}$t3$&quot;.format(&#10;$v1$, $v2$, $v3$)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="t1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="t2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="t3" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="v1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="v2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="v3" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fors" toReformat="false" toShortenFQNames="true" value="for $1$ in $1$s:&#10;    $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="givenone" toReformat="false" toShortenFQNames="true" value="-&gt; None">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifnone" toReformat="false" toShortenFQNames="true" value="if $1$ is None:&#10;  $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifnotex" toReformat="false" toShortenFQNames="true" value="if not os.path.exists($1$):&#10;    $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifnotmake" toReformat="false" toShortenFQNames="true" value="os.makedirs($dir$, exist_ok=True)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="dir" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="initone" toReformat="false" toShortenFQNames="true" value="def __init__(self, $arg$: $type$)-&gt;None:&#10;    &quot;&quot;&quot;&#10;    $desc$&#10;    &#10;    :param $arg$: $argdesc$&#10;    :return: None&#10;    &quot;&quot;&quot;&#10;    $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="arg" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="type" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="desc" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="argdesc" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="inputrysnapshot" toReformat="false" toShortenFQNames="true" value="#!/usr/bin/env python3&#10;# pylint: disable=invalid-name&#10;&quot;&quot;&quot;&#10;Fetches images from the $camera$ camera.&#10;&quot;&quot;&quot;&#10;import inspect&#10;&#10;import pipeline.input.snapshot&#10;import pqry.logging&#10;&#10;&#10;def main():&#10;    &quot;&quot;&quot;&#10;    Main routine&#10;    &quot;&quot;&quot;&#10;    defaults = pipeline.input.snapshot.Params()&#10;    defaults.host = '$host$'&#10;    defaults.port = '$port$'&#10;    defaults.path = '/$path$'&#10;    defaults.arguments = '{}'&#10;&#10;    pipeline.input.snapshot.main_hook(defaults=defaults, camera_id=&quot;$camera$&quot;)&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    try:&#10;        main()&#10;    except:&#10;        pqry.logging.err(__file__, inspect.currentframe().f_lineno, &quot;Encountered an exception.&quot;)&#10;        raise&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="camera" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="host" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="port" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="path" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="join" toReformat="false" toShortenFQNames="true" value="os.path.join($1$)">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="mockerysnapshot" toReformat="false" toShortenFQNames="true" value="#!/usr/bin/env python3&#10;&#10;&quot;&quot;&quot;&#10;Mock snapshot server for $camera$ camera&#10;&quot;&quot;&quot;&#10;&#10;# pylint: disable=invalid-name&#10;&#10;&#10;import inspect&#10;&#10;import pqry.logging&#10;import integration_testing.mock.snapshot&#10;&#10;&#10;def main() -&gt; None:&#10;    &quot;&quot;&quot;&#10;    Main routine&#10;    &quot;&quot;&quot;&#10;    defaults = integration_testing.mock.snapshot.Params()&#10;    defaults.path = '$path$'&#10;    defaults.user = 'parquery'&#10;    defaults.passw = 'passwordForTesting'&#10;&#10;    integration_testing.mock.snapshot.main_hook(defaults=defaults)&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    try:&#10;        main()&#10;    except:&#10;        pqry.logging.err(__file__, inspect.currentframe().f_lineno, &quot;Encountered an exception.&quot;)&#10;        raise&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="camera" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="path" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="mustexist" toReformat="false" toShortenFQNames="true" value="if not os.path.exists($dir$):&#10;    raise RuntimeError('Does not exist: {}'.format($dir$)$END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="dir" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="mypy" toReformat="false" toShortenFQNames="true" value="#!/usr/bin/env python3&#10;&#10;def main():&#10;    &quot;&quot;&quot;&#10;    Main routine&#10;    &quot;&quot;&quot;&#10;    &#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    main()&#10;">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="open" toReformat="false" toShortenFQNames="true" value="with open($1$, '$2$') as fid:&#10;    $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="2" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="par" toReformat="false" toShortenFQNames="true" value="($SELECTION$)">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="pylint" toReformat="false" toShortenFQNames="true" value="# pylint: disable=$END$">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="repr" toReformat="false" toShortenFQNames="true" value="repr($SELECTION$)">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="req" toReformat="false" toShortenFQNames="true" value="required=True">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="runtimeone" toReformat="false" toShortenFQNames="true" value="raise RuntimeError('$msg${}'.format($var$))">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="msg" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="runtimetwo" toReformat="false" toShortenFQNames="true" value="raise RuntimeError('$msg${}: {}'.format($var1$, $var2$))">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="msg" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="say" toReformat="false" toShortenFQNames="true" value="pqry.logging.say(__file__, inspect.currentframe().f_lineno, &quot;$END$&quot;)">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="sayone" toReformat="false" toShortenFQNames="true" value="pqry.logging.say(__file__, inspect.currentframe().f_lineno, &#10;  &quot;$1${}$2$&quot;.format($v1$))">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="2" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="v1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="scriptdir" toReformat="false" toShortenFQNames="true" value="script_dir = os.path.dirname(os.path.realpath(__file__))">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="siger" toReformat="false" toShortenFQNames="true" value="pqry.logging.say(__file__, inspect.currentframe().f_lineno,&#10;                 &quot;Entering the endless loop. Send SIGINT or SIGTERM to {} to exit.&quot;.format(os.getpid()))&#10;pqry.siger.Siger.initialize_signal_handlers()&#10;&#10;while not pqry.siger.Siger.done():&#10;">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ss" toReformat="false" toShortenFQNames="true" value="self.$var$ = $var$$END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="tdelta" toReformat="false" toShortenFQNames="true" value="datetime.timedelta(seconds=$SELECTION$)">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="todo" toReformat="false" toShortenFQNames="true" value="# TODO(marko): ">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="union" toReformat="false" toShortenFQNames="true" value="# type: Union[None, $1$]">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="1" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="unusedimport" toReformat="false" toShortenFQNames="true" value="# pylint: disable=unused-import">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="utcnow" toReformat="false" toShortenFQNames="true" value="datetime.datetime.utcnow()">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="wopen" toReformat="false" toShortenFQNames="true" value="with open($path$, '$mode$') as fid:&#10;    $END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="path" />
    <variable alwaysStopAt="true" defaultValue="" expression="" name="mode" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>
