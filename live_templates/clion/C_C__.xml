<templateSet group="C/C++">
  <template name="asserteq" toReformat="false" toShortenFQNames="true" value="BOOST_REQUIRE_EQUAL($condition$);">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="condition" />
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="ifnotmake" toReformat="false" toShortenFQNames="true" value="if (not fs::exists($var$)) {&#10;  fs::create_directories($var$);&#10;}&#10;$END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var" />
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="incfs" toReformat="false" toShortenFQNames="true" value="#include &lt;boost/filesystem/path.hpp&gt;">
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="mytest" toReformat="false" toShortenFQNames="true" value="#define BOOST_TEST_DYN_LINK&#10;#DEFINE BOOST_TEST_MODULE $test$&#10;#include &lt;boost/test/unit_test.hpp&gt;&#10;&#10;$END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="test" />
    <context>
      <option name="OC_EXPRESSION_CPP" value="false" />
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="namespace" toReformat="false" toShortenFQNames="true" value="namespace $namespace$ {&#10;$END$&#10;}  // namespace $namespace$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="namespace" />
    <context>
      <option name="OC_DECLARATION_CPP" value="true" />
    </context>
  </template>
  <template name="panic" toReformat="false" toShortenFQNames="true" value="pqry::Logging::panic(__FILE__, __LINE__, $var$);$END$">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var" />
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="say" toReformat="false" toShortenFQNames="true" value="pqry::Logging::say(__FILE__, __LINE__, &quot;$END$&quot;);">
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="testcase" toReformat="false" toShortenFQNames="true" value="BOOST_AUTO_TEST_CASE($test$) {&#10;$END$&#10;}">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="test" />
    <context>
      <option name="OC_DECLARATION_CPP" value="true" />
    </context>
  </template>
  <template name="vogon" toReformat="false" toShortenFQNames="true" value="R&quot;v0g0n($END$)v0g0n&quot;">
    <context>
      <option name="OC_EXPRESSION_CPP" value="true" />
    </context>
  </template>
</templateSet>
